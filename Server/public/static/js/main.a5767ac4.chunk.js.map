{"version":3,"sources":["components/navbar/Navbar.js","components/auth/AuthService.js","components/auth/Signup.js","components/auth/Login.js","services/ChlotesService.js","components/closet/closet.jsx","components/contents/Contents.js","components/newclothe/newclothe.jsx","services/temperatureServices.js","components/termperature/temperature.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","userInSession","logout","className","onClick","e","to","AuthService","signup","username","password","service","post","then","response","data","login","loggedin","get","axios","process","this","create","baseURL","withCredentials","Signup","props","handleFormSubmit","event","preventDefault","state","setState","getUser","user","catch","error","handleChange","target","name","value","onSubmit","type","onChange","Component","Login","ClothesServices","getAllClothes","getClothe","id","addClothes","clothes","deleteClothes","delete","console","log","AllClothes","onDelete","services","err","Allclothes","componentDidMount","prenda","category","storm","wind","image","map","clothe","idx","key","src","alt","_id","Contents","FormClothe","placeholder","sendForm","React","TemperatureService","getTemperature","Temperature","allTemps","Temps","country","sys","description","weather","icon","temp","main","humidity","windSpeed","speed","city","App","addFood","thecloth","Clothescopie","push","userObj","loggedInUser","field","fetchUser","Fragment","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a5767ac4.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\"\n\nfunction Navbar({ userInSession, logout }) {\n\n  const handleLogout = e => {\n    logout();\n  };\n\n  return (\n    userInSession ?\n      <nav className=\"nav-style\">\n        <ul>\n          <li>\n            <button\n              onClick={(e) => handleLogout(e)}>Logout</button>\n          </li>\n        </ul>\n        <div className=\"header\">\n          <h2>Bienvenido a tu armario virtual</h2>\n        </div>\n      </nav>\n      :\n      <div>\n        <nav className=\"nav-style1\">\n          <div>\n            <Link to=\"/signup\">Signup</Link>\n          </div>\n          <div>\n            <Link to=\"/login\">Login</Link>  \n          </div>\n          \n        </nav>\n      </div >\n  )\n}\n\nexport default Navbar;","// auth/auth-service.js\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let xxx = `${process.env.REACT_APP_API_URL}/auth`\n    debugger\n\n    this.service =\n     axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    debugger\n    return axios.post(\"http://localhost:3001/api/auth/logout\")\n    .then(response => {\n      debugger\n      \n      return response.data\n    })\n  }\n}\n\nexport default AuthService;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from './AuthService'\nimport \"./Signup.css\"\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        <h3>Welcome!, create your account next:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input className=\"signup-buttom\" type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport AuthService from './AuthService'\nimport \"./Login.css\"\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (<div>\n      <h3>Please, login to our site</h3>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input className=\"login-button\" type=\"submit\" value=\"Login\" />\n      </form>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}\n\nexport default Login;","import axios from \"axios\";\n\nexport default class ClothesServices {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}`\n    });\n  }\n\n  getAllClothes = () =>\n    this.service.get(\"/closet\").then(response => {\n      return response.data;\n    });\n  getClothe = id =>\n    this.service.get(`/closet/${id}`).then(response => response.data);\n\n  addClothes = clothes =>\n    this.service.post(\"/newclothes\", clothes).then(response => response.data);\n\n    //aqui tu le pasas el id de la ropa que quieres borrar\n  deleteClothes = id =>\n    this.service\n      .delete(`/delete-clothes/${id}`)\n      .then(response => {\n        console.log(\"Hola soy el servicio que elimina\")\n        return response.data\n      }\n    );\n}\n// y como le paso el id jajaja eso no lo hace solo al hacer el get all clothes?\n// //para hacer la petición a axios,\n// // luego llamamos a este componente desde donde queremos los datos y hacemos un constructor con un state.\n// //(aqui pedimos los datos de las Clothes)\n// this.ClothesService = new ClothesService();\n// let Clothes = [] //para que no de error a la hora de renderizar por temas de sincronía.\n\n// this.clothes\n// //VA CON EL THIS PORQUE ES UNA CLASE\n\n// //en el app (componente link to hacia el id)\n\n// //tema de filtrado con el json  this.state.clothes.filter(clothes => clothes.categorty o nombre o id === valor) y para qued\n","import React, { Component } from \"react\";\nimport ClothesServices from \"../../services/ChlotesService\";\nimport \"./closet.css\";\nclass AllClothes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      clothes: [],\n      prenda:\"\",\n      category: \"\",\n      storm: false,\n      wind: false,\n      type: \"\",\n      image: \"\",\n      prenda: \"\"\n    };\n    // this.services tiene todos los servicios que hay en ese archivo\n    this.services = new ClothesServices();\n  }\n\n  onDelete = id => {\n    //Lo primero de todo es ver que entra en los metodos cuando le vamos dando\n    console.log(\"Hola soy el metodo que elimina\");\n    console.log(id);\n    this.services\n      .deleteClothes(id)\n      .then(() => console.log(\"delete ok\"))\n      .catch(err => console.log(\"ha fallado el delete\"));\n  };\n\n  getAllClothes = () => {\n    this.services\n      .getAllClothes()\n      .then(Allclothes => {\n        this.setState({ clothes: Allclothes });\n      })\n      .catch(err => console.log(err));\n  };\n\n  // Lo de el mapeo de la ropa esta OK,\n  // Además\n\n  //   onDelete(id) {\n  //     deleteonePost(id) //esto ya no lo entiendo, te explico\n  //         .then((data) => {\n  //             let onePosts = this.state.onePosts.filter((post) => {\n  //                 return id !== post.id;\n  //             });\n\n  //             this.setState(state => {\n  //                 state.onePosts = Posts;\n  //                 return state;\n  //             });\n  //         })\n  //         .catch((err) => {\n  //             console.error('err', err);\n  //         });\n  // }\n  //eso fue cogido de un ejemplo ok si si eso aparece bien necesito la funcion borrar o si hay que llevarla desde services o yo que se\n  // Ok voy a escribir yo ok\n\n  componentDidMount = () => this.getAllClothes();\n\n  render() {\n    return (\n      <>\n        <div className=\"closet\">\n          <h1>Lista de ropa</h1>\n          <ul>\n            {this.state.clothes.map((clothe, idx) => (\n              <div key={idx}>\n                <img\n                  className=\"imgcloset\"\n                  src={clothe.image}\n                  alt=\"{clothe.image}\"\n                />\n                <h2>Prenda: {clothe.prenda}</h2>\n                <h2>Categoría: {clothe.category}</h2>\n                <h2>Tipo: {clothe.type}</h2>\n                <p>Lluvioso: {clothe.storm}</p>\n                <p>Viento: {clothe.wind}</p>\n                <button onClick={this.onDelete(clothe._id)}>Borrar</button>\n              </div>\n            ))}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n//no le gusta nada jajaj\nexport default AllClothes;\n","import React, { Component } from 'react';\nimport AllClothes from '../closet/closet';\nimport \"./Contents.css\"\n//clase componente que renderiza los contenidos genéricos\n//usando rendering condicional y el componente Switch que ya conocéis podéis mostrar los contenidos oportunos que queráis\nclass Contents extends Component {\n  render() {\n    return (<div className=\"allClothes\">\n        <AllClothes></AllClothes>\n        </div>);\n    \n  }\n}\n\nexport default Contents;","import React from \"react\";\nimport ClothesServices from \"../../services/ChlotesService\";\n\nexport default class FormClothe extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      prenda: \"pantalon\",\n      category: \"soleado\",\n      storm: \"Si\",\n      wind: \"Si\",\n      type: \"sportswear\",\n      image:\n        \"https://previews.123rf.com/images/apoev/apoev1806/apoev180600084/103284681-default-placeholder-fitness-trainer-in-a-t-shirt-half-length-portrait-photo-avatar-gray-color.jpg\"\n    };\n\n    this.services = new ClothesServices();\n  }\n\n  onChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  sendForm(event) {\n    event.preventDefault();\n    this.services.addClothes(this.state);\n  }\n\n  render() {\n    return (\n      <div>\n        <form onChange={event => this.onChange(event)}>\n          <label>Escoge una prenda:</label>\n          <select name=\"prenda\">\n            <option value=\"pantalon\">Pantalón</option>\n            <option value=\"blusa/camiseta\">Blusa/camisa</option>\n            <option value=\"abrigo\">Abrigo</option>\n            <option value=\"chaqueta\">Chaqueta</option>\n            <option value=\"vestido\">Vestido</option>\n          </select>\n          <label>Escoge una categoría:</label>\n          <select name=\"category\">\n            <option value=\"soleado\">Soleado</option>\n            <option value=\"medio\">Medio</option>\n            <option value=\"frio\">Frio</option>\n          </select>\n          <label>Impermeable:</label>\n          <select name=\"storm\">\n            <option value=\"Si\">Si</option>\n            <option value=\"No\">no</option>\n          </select>\n          <label>Cortavientos:</label>\n          <select name=\"wind\">\n            <option value=\"Si\">Si</option>\n            <option value=\"No\">no</option>\n          </select>\n          <label>Outfit:</label>\n          <select name=\"type\">\n            <option value=\"sportswear\">Deportiva</option>\n            <option value=\"casual\">Casual</option>\n            <option value=\"formal\">Formal</option>\n            <option value=\"workwear\">Ropa de trabajo</option>\n          </select>\n     \n          <input\n            name=\"image\"\n            type=\"file\"\n            placeholder=\"image\"\n            value= \"\"\n            \n          />\n          <button onClick={event => this.sendForm(event)}> Send Form</button>\n        </form>\n      </div>\n    );\n  }\n}\n","\nimport axios from 'axios'\n\nexport default class TemperatureService {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `https://api.openweathermap.org/data/2.5/weather?q=Madrid&units=metric&appid=521ac5c00f7f010e3fec218a77ce8285&lang=es`\n        })\n    }\n    getTemperature = () => this.service.get().then(response => response.data)\n\n}","\nimport TemperatureService from \"../../services/temperatureServices\"\nimport React, { Component } from 'react'\nimport \"./temperature.css\"\nclass Temperature extends Component {\n    constructor() {\n        super()\n        this.state = {\n            Temps: [],\n            country: \"\",\n            description: \"\",\n            icon: \"\",\n            temp: 0,\n            humidity: 0,\n            windSpeed: 0,\n            city: \"\",\n        }\n        this.services = new TemperatureService()\n    }\n\n    getTemperature = () => {\n        this.services.getTemperature()\n            .then(allTemps => {\n                this.setState({\n                    Temps: allTemps,\n                    country: allTemps.sys.country,\n                    description: allTemps.weather[0].description,\n                    icon: allTemps.weather[0].icon,\n                    temp: allTemps.main.temp,\n                    humidity: allTemps.main.humidity,\n                    windSpeed: allTemps.wind.speed,\n                    city: allTemps.name,\n\n                })\n\n            })\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount = () => this.getTemperature()\n\n    render() {\n        // const { }\n        return (\n            <div>\n                <h2>{this.state.city}</h2>\n                <h2>{this.state.country}</h2>\n                <h2>{this.state.temp}ºC</h2>\n                <h2>{this.state.description}</h2>\n                <img className=\"Icon\" src= {`https://openweathermap.org/img/w/${this.state.icon}.png`} alt=\"Icon\" />\n                <h2>Humedad: {this.state.humidity}%</h2>\n                <h2>Velocidad del viento: {this.state.windSpeed}km/h</h2>\n            </div>\n        )\n    }\n\n}\n\nexport default Temperature;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\n// import ProjectList from './components/projects/ProjectList';\nimport Navbar from \"./components/navbar/Navbar\";\n// import ProjectDetails from './components/projects/ProjectDetails';\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Contents from \"./components/contents/Contents\";\nimport FormClothe from \"./components/newclothe/newclothe\";\nimport Temperature from \"./components/termperature/temperature\";\n\n//App es la aplicación base, que se sirve del servicio AuthService para conectar con la bbdd\nclass App extends Component {\n  //en el tiempo de construcción de la aplicación, creamos una instancia del authservice\n  constructor(props) {\n    super(props);\n    //arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  updateForm(e, field) {\n    this.setState({\n      ...this.state,\n      [field]: e.target.value\n    });\n  }\n\n  addFood = thecloth => {\n    const Clothescopie = [...this.state.clothes];\n    Clothescopie.push(thecloth);\n    this.setState({ clothes: Clothescopie });\n  };\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  logout = () => {\n    debugger\n    this.service.logout().then(() => {\n      debugger\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      //en este caso mostramos los contenidos ya que hay usuario\n      return (\n        <React.Fragment>\n          <Redirect to=\"/home\" />\n\n          <div className=\"home\">\n            <header className=\"App-header\">\n              <Navbar\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n                />\n              {/* aqui simplemente se muestra un lorem ipsum genérico para que veáis contenidos que solo se muestran a usuarios logeados */}\n            </header>\n            <div>\n              <Contents />\n            </div>\n                <FormClothe></FormClothe>\n          </div>\n        </React.Fragment>\n        //ola\n      );\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <Redirect to=\"/login\" />\n\n          <div className=\"App\">\n            <header className=\"App-header1\">\n              <div className=\"login\">\n                <Navbar\n                  userInSession={this.state.loggedInUser}\n                  logout={this.logout}\n                />\n\n                <Switch>\n                  <Route\n                    exact\n                    path=\"/signup\"\n                    render={() => <Signup getUser={this.getUser} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/login\"\n                    render={() => (\n                      <Login getUser={user => this.getUser(user)} />\n                    )}\n                  />\n                </Switch>\n              </div>\n              <div className=\"TempDiv\">\n                <h4>\n                  Temperatura :<Temperature></Temperature>\n                </h4>\n              </div>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n<Router>\n<App />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}