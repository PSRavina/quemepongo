{"version":3,"sources":["components/navbar/Navbar.js","components/auth/AuthService.js","components/auth/Signup.js","services/temperatureServices.js","components/termperature/temperature.jsx","components/auth/Login.js","services/ChlotesService.js","components/newclothe/newclothe.jsx","components/closet/closetboots.jsx","components/contents/Contents.js","components/closet/closet.jsx","components/SearchBar/Search.jsx","components/landing/landing.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","userInSession","logout","className","Button","onClick","e","variant","to","AuthService","signup","username","password","service","post","then","response","data","login","loggedin","get","axios","this","create","baseURL","process","withCredentials","Signup","props","handleFormSubmit","event","preventDefault","state","setState","getUser","user","catch","error","handleChange","target","name","value","onSubmit","type","onChange","Component","TemperatureService","getTemperature","Temperature","services","allTemps","Temps","country","sys","description","weather","icon","temp","main","humidity","windSpeed","wind","speed","city","err","console","log","componentDidMount","src","alt","Login","ClothesServices","getAllClothes","getClothe","id","addClothes","clothes","deleteClothes","delete","searchClothes","FormClothe","prenda","category","storm","image","updateCloth","placeholder","sendForm","React","BootsClothes","onDelete","Allclothes","clothesToDisplay","results","filter","clothe","includes","search","updateForm","bg","Brand","href","Form","inline","FormControl","map","idx","Card","style","width","Img","Body","Title","_id","Contents","Landing","handleLogout","loggedInUser","nextProps","App","addFood","thecloth","Clothescopie","push","userObj","field","fetchUser","Fragment","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6db5fc04.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport { Button } from \"react-bootstrap\";\n\nfunction Navbar({ userInSession, logout }) {\n  const handleLogout = e => {\n    logout();\n  };\n\n  return userInSession ? (\n    <nav className=\"nav-style\">\n      <ul>\n        <li>\n          <Button onClick={e => handleLogout(e)} variant=\"danger\">\n            {\" \"}\n            Log out\n          </Button>\n        </li>\n      </ul>\n      <div className=\"header\">\n        <h2>Bienvenido a tu armario virtual</h2>\n      </div>\n    </nav>\n  ) : (\n    <div>\n      <nav className=\"nav-style1\">\n        <div>\n          <Link to=\"/signup\">Signup</Link>\n        </div>\n        <div>\n          <Link to=\"/login\">Login</Link>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","// auth/auth-service.js\nimport axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password) => {\n    return this.service\n      .post(\"/signup\", { username, password })\n      .then(response => response.data);\n  };\n\n  login = (username, password) => {\n    return this.service\n      .post(\"/login\", { username, password })\n      .then(response => response.data);\n  };\n\n  loggedin = () => {\n    return this.service.get(\"/currentUser\").then(response => response.data);\n  };\n\n  logout = () => {\n    return axios.post(\"/logout\").then(response => response.data);\n  };\n}\n\nexport default AuthService;\n","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from './AuthService'\nimport \"./Signup.css\"\nimport { Button } from \"react-bootstrap\";\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        <h3>Bienvenido, crea tu cuenta aquí:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          <Button  variant=\"primary\" className=\"login-button\" type=\"submit\" value=\"Sign up\" >Sign up</Button>\n          {/* <input className=\"signup-buttom\" type=\"submit\" value=\"Sign up\" /> */}\n        </form>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","import axios from \"axios\";\n\nexport default class TemperatureService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `https://api.openweathermap.org/data/2.5/weather?q=Madrid&units=metric&appid=521ac5c00f7f010e3fec218a77ce8285&lang=es`\n    });\n  }\n  getTemperature = () => this.service.get().then(response => response.data);\n}\n","import TemperatureService from \"../../services/temperatureServices\";\nimport React, { Component } from \"react\";\nimport \"./temperature.css\";\nclass Temperature extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Temps: [],\n      country: \"\",\n      description: \"\",\n      icon: \"\",\n      temp: 0,\n      humidity: 0,\n      windSpeed: 0,\n      city: \"\"\n    };\n    this.services = new TemperatureService();\n  }\n\n  getTemperature = () => {\n    this.services\n      .getTemperature()\n      .then(allTemps => {\n        this.setState({\n          Temps: allTemps,\n          country: allTemps.sys.country,\n          description: allTemps.weather[0].description,\n          icon: allTemps.weather[0].icon,\n          temp: allTemps.main.temp,\n          humidity: allTemps.main.humidity,\n          windSpeed: allTemps.wind.speed,\n          city: allTemps.name\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  componentDidMount = () => this.getTemperature();\n\n  render() {\n    // const { }\n    return (\n      <div className=\"temperaturediv\">\n        {/* <Card border=\"light\" style={{ width: \"14rem\", height: \"8rem\"}}>\n          <Card.Header>TEMPERATURA</Card.Header>\n          <Card.Body>\n            <Card.Img src={`https://openweathermap.org/img/w/${this.state.icon}.png`}></Card.Img>\n            <Card.Title>{this.state.temp}ºC</Card.Title>\n            <Card.Title>{this.state.city}</Card.Title>\n            <Card.Title>{this.state.country}</Card.Title>\n            <Card.Text>{this.state.windSpeed}km/h</Card.Text>\n            <Card.Text>{this.state.humidity}%</Card.Text>\n          </Card.Body>\n        </Card> */}\n        <h2>{this.state.city}</h2>\n        <h2>{this.state.country}</h2>\n        <h2>{this.state.temp}ºC</h2>\n        <h2>{this.state.description}</h2>\n        <img\n          className=\"Icon\"\n          src={`https://openweathermap.org/img/w/${this.state.icon}.png`}\n          alt=\"Icon\"\n        />\n        <h2>Humedad: {this.state.humidity}%</h2>\n        <h2>Velocidad del viento: {this.state.windSpeed}km/h</h2>\n      </div>\n    );\n  }\n}\n\nexport default Temperature;\n","// auth/Signup.js\nimport React, { Component } from \"react\";\n// import { Link } from 'react-router-dom';\nimport AuthService from \"./AuthService\";\nimport Temperature from \"../termperature/temperature\";\nimport \"./Login.css\";\nimport { Button } from \"react-bootstrap\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response);\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Por favor, haz login para entrar :</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <fieldset>\n            <label>Password:</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n          <Button\n            variant=\"primary\"\n            className=\"login-button\"\n            type=\"submit\"\n            value=\"Login\"\n          >\n            Log in\n          </Button>\n          {/* <input className=\"login-button\" type=\"submit\" value=\"Login\" /> */}\n        </form>\n\n        <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n        <h4>\n          <Temperature></Temperature>\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import axios from \"axios\";\n\nexport default class ClothesServices {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}`\n    });\n  }\n\n  getAllClothes = () =>\n    this.service.get(\"/closet\").then(response => {\n      return response.data;\n    });\n  getClothe = id =>\n    this.service.get(`/closet/${id}`).then(response => response.data);\n\n  addClothes = clothes =>\n    this.service.post(\"/newclothes\", clothes).then(response => response.data);\n\n  //aqui tu le pasas el id de la ropa que quieres borrar\n  deleteClothes = id =>\n    this.service.delete(`/delete-clothes/${id}`).then(response => {\n      return response.data;\n    });\n\n  searchClothes = () =>\n    this.service.get(\"/search\").then(response => response.data);\n}\n// y como le paso el id jajaja eso no lo hace solo al hacer el get all clothes?\n// //para hacer la petición a axios,\n// // luego llamamos a este componente desde donde queremos los datos y hacemos un constructor con un state.\n// //(aqui pedimos los datos de las Clothes)\n// this.ClothesService = new ClothesService();\n// let Clothes = [] //para que no de error a la hora de renderizar por temas de sincronía.\n\n// this.clothes\n// //VA CON EL THIS PORQUE ES UNA CLASE\n\n// //en el app (componente link to hacia el id)\n\n// //tema de filtrado con el json  this.state.clothes.filter(clothes => clothes.categorty o nombre o id === valor) y para qued\n","import React from \"react\";\nimport ClothesServices from \"../../services/ChlotesService\";\nimport \"./newclothe.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { BrowserRouter } from \"react-router-dom\";\nexport default class FormClothe extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      prenda: \"pantalon\",\n      category: \"soleado\",\n      storm: \"Si\",\n      wind: \"Si\",\n      type: \"sportswear\",\n      image:\n        \"https://previews.123rf.com/images/apoev/apoev1806/apoev180600084/103284681-default-placeholder-fitness-trainer-in-a-t-shirt-half-length-portrait-photo-avatar-gray-color.jpg\"\n    };\n\n    this.services = new ClothesServices();\n  }\n\n  onChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  sendForm(event) {\n    event.preventDefault();\n    this.services.addClothes(this.state).then(() => this.props.updateCloth);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"Linkformulario\">\n          <Link to=\"/Contents\">VOLVER AL ARMARIO</Link>\n        </div>\n        <form className=\"Form\" onChange={event => this.onChange(event)}>\n          <label>ESCOGE UNA PRENDA:</label>\n          <select name=\"prenda\">\n            <option value=\"pantalon\">Pantalón</option>\n            <option value=\"falda\">Falda</option>\n            <option value=\"camiseta/blusa\">Blusa/camisa</option>\n            <option value=\"abrigo\">Abrigo</option>\n            <option value=\"chaqueta\">Chaqueta</option>\n            <option value=\"vestido\">Vestido</option>\n          </select>\n          <label>ESCOGE UNA CATEGORÍA:</label>\n          <select name=\"category\">\n            <option value=\"soleado\">Soleado</option>\n            <option value=\"medio\">Medio</option>\n            <option value=\"frio\">Frio</option>\n          </select>\n          <label>IMPERMEABLE:</label>\n          <select name=\"storm\">\n            <option value=\"Si\">Si</option>\n            <option value=\"No\">no</option>\n          </select>\n          <label>CORTAVIENTOS::</label>\n          <select name=\"wind\">\n            <option value=\"Si\">Si</option>\n            <option value=\"No\">no</option>\n          </select>\n          <label>OUTFIT:</label>\n          <select name=\"type\">\n            <option value=\"sportswear\">Deportiva</option>\n            <option value=\"casual\">Casual</option>\n            <option value=\"formal\">Formal</option>\n            <option value=\"workwear\">Ropa de trabajo</option>\n          </select>\n\n          <input name=\"image\" type=\"file\" placeholder=\"image\" value=\"\" />\n          <Button onClick={event => this.sendForm(event)} variant=\"primary\">\n            Añadir al armario\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ClothesServices from \"../../services/ChlotesService\";\nimport { Card, Button , Navbar, Form, FormControl} from \"react-bootstrap\";\nimport \"./closet.css\";\nimport FormClothe from \"../newclothe/newclothe\";\nimport {Link} from \"react-router-dom\"\nclass BootsClothes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      clothes: [],\n      clothesToDisplay: [],\n      prenda: \"\",\n      category: \"\",\n      storm: false,\n      wind: false,\n      type: \"\",\n      image: \"\",\n      prenda: \"\",\n      search:\"\",\n    };\n    // this.services tiene todos los servicios que hay en ese archivo\n    this.services = new ClothesServices();\n  }\n\n  onDelete = (event, id) => {\n    event.preventDefault();\n    this.services\n      .deleteClothes(id)\n      .then(() => this.getAllClothes())\n      .catch(err => console.log(err))\n    };\n\n  getAllClothes = () => {\n    this.services\n      .getAllClothes()\n      .then(Allclothes => {\n        this.setState({ \n          clothes: Allclothes ,\n          clothesToDisplay: Allclothes\n        });\n      })\n      .catch(err => console.log(err))\n  };\n\n  searchClothes = (e) => {\n    console.log(\"entra en borrar\")\n   \n    let results = this.state.clothes.filter(clothe => clothe.prenda.includes(this.state.search) || clothe.category.includes(this.state.search) || clothe.type.includes(this.state.search) \n    )\n    this.setState({\n      clothesToDisplay : results\n    })\n  }\n\n  updateForm =(e) => {\n    const { name, value } = e.target;\n    console.log(value);\n    console.log(name);\n    this.setState({\n        [name]: value\n    },()=>{\n      this.searchClothes()\n    });\n  }\n\n  componentDidMount = () => {\n    this.getAllClothes()\n  }\n\n  render() {\n    return (\n      <>\n  \n          <Navbar bg=\"light\" variant=\"light\">\n            <Navbar.Brand href=\"/home\">Quemepongo</Navbar.Brand>\n            <Form inline>\n              <FormControl\n                onChange={this.updateForm}\n                type=\"text\"\n                placeholder=\"Search\"\n                className=\"mr-sm-2\"\n                value={this.state.value}\n                name=\"search\"\n              />\n        \n  \n              <div className=\"Linkformulario\">\n                <Link to=\"/FormClothe\">Añadir nueva ropa</Link>\n              </div>\n            </Form>\n          </Navbar>\n\n\n        <div className=\"closet\">\n          \n        {/* <FormClothe updateClothes={this.getAllClothes()}></FormClothe> */}\n\n          <ul className=\"prendasul\">\n            {this.state.clothesToDisplay.map((clothe, idx) => (\n              <Card style={{ width: \"18rem\" }}>\n                <Card.Img variant=\"top\" src={clothe.image} />\n                <Card.Body>\n                  <Card.Title>{clothe.prenda}</Card.Title>\n                  <Card.Title>Tipo: {clothe.type}</Card.Title>\n                  <Card.Title>Clima: {clothe.category}</Card.Title>\n                  <Card.Title>Lluvia: {clothe.storm}</Card.Title>\n                  <Card.Title>Cortavientos: {clothe.wind}</Card.Title>\n\n                  <Button onClick={(event) => this.onDelete(event, clothe._id)} variant=\"danger\">\n                    Eliminar prenda\n                  </Button>\n                </Card.Body>\n              </Card>\n            ))}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n\n//no le gusta nada jajaj\nexport default BootsClothes;\n","import React, { Component } from 'react';\nimport \"./Contents.css\"\nimport BootsClothes from \"../closet/closetboots\";\nimport Search from '../SearchBar/Search';\nimport Temperature from \"../termperature/temperature\";\n//clase componente que renderiza los contenidos genéricos\n//usando rendering condicional y el componente Switch que ya conocéis podéis mostrar los contenidos oportunos que queráis\nclass Contents extends Component {\n  render() {\n    return (<div className=\"allClothes\">\n        {/* <AllClothes></AllClothes> */}\n        <Temperature className=\"Tempcloset\"></Temperature>\n        <BootsClothes className=\"boot\"></BootsClothes>\n       \n        </div>);\n    \n  }\n}\n\nexport default Contents;","import React, { Component } from \"react\";\nimport ClothesServices from \"../../services/ChlotesService\";\nimport \"./closet.css\";\nimport BootsClothes from \"./closetboots\";\nclass AllClothes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      clothes: [],\n      prenda:\"\",\n      category: \"\",\n      storm: false,\n      wind: false,\n      type: \"\",\n      image: \"\",\n      prenda: \"\"\n    };\n    // this.services tiene todos los servicios que hay en ese archivo\n    this.services = new ClothesServices();\n  }\n\n  onDelete = id => {\n    //Lo primero de todo es ver que entra en los metodos cuando le vamos dando\n    console.log(\"Hola soy el metodo que elimina\");\n    console.log(id);\n    this.services\n      .deleteClothes(id)\n      .then(() => console.log(\"delete ok\"))\n      .catch(err => console.log(\"ha fallado el delete\"));\n  };\n\n  getAllClothes = () => {\n    this.services\n      .getAllClothes()\n      .then(Allclothes => {\n        this.setState({ clothes: Allclothes });\n      })\n      .catch(err => console.log(err));\n  };\n\n  // Lo de el mapeo de la ropa esta OK,\n  // Además\n\n  //   onDelete(id) {\n  //     deleteonePost(id) //esto ya no lo entiendo, te explico\n  //         .then((data) => {\n  //             let onePosts = this.state.onePosts.filter((post) => {\n  //                 return id !== post.id;\n  //             });\n\n  //             this.setState(state => {\n  //                 state.onePosts = Posts;\n  //                 return state;\n  //             });\n  //         })\n  //         .catch((err) => {\n  //             console.error('err', err);\n  //         });\n  // }\n  //eso fue cogido de un ejemplo ok si si eso aparece bien necesito la funcion borrar o si hay que llevarla desde services o yo que se\n  // Ok voy a escribir yo ok\n\n  componentDidMount = () => this.getAllClothes();\n\n  render() {\n    return (\n      <>\n        <div className=\"closet\">\n          <h1>Lista de ropa</h1>\n          <ul className=\"prendalista\">\n            {this.state.clothes.map((clothe, idx) => (\n              <div key={idx}>\n                <img\n                  className=\"imgcloset\"\n                  src={clothe.image}\n                  alt=\"{clothe.image}\"\n                />\n                <h2>Prenda: {clothe.prenda}</h2>\n                <h2>Categoría: {clothe.category}</h2>\n                <h2>Tipo: {clothe.type}</h2>\n                <p>Lluvioso: {clothe.storm}</p>\n                <p>Viento: {clothe.wind}</p>\n                <button onClick={this.onDelete(clothe._id)}>Borrar</button>\n              </div>\n            ))}\n            <BootsClothes></BootsClothes>\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n//no le gusta nada jajaj\nexport default AllClothes;\n","import React from \"react\";\nimport AllClothes from \"../closet/closet\";\nimport { Button, Navbar, Form, FormControl} from \"react-bootstrap\";\nimport ClothesServices from \"../../services/ChlotesService\";\nimport { Link } from \"react-router-dom\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clothes: [],\n      prenda: \"\",\n      category: \"\",\n      storm: false,\n      wind: false,\n      type: \"\",\n      image: \"\"\n    };\n    // this.services tiene todos los servicios que hay en ese archivo\n    this.services = new ClothesServices();\n  }\n\n  componentDidMount() {\n    this.setState({\n      clothes: this.state.clothes\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      clothes: nextProps.items\n    });\n  }\n\n  onChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n    console.log(this.state);\n  };\n\n  searchClothes = value => {\n    console.log(this.state);\n    debugger;\n    const clothesCopie = [...this.state.category];\n    const clothesOriginal = [...this.state.category];\n    let newList = [];\n    console.log(value);\n\n    newList = clothesOriginal.filter(item => {\n      // const lc = item.name.toLowerCase();\n      // const filter = value.toLowerCase();\n      const lc = item.prenda;\n      console.log(lc);\n      const filter = value;\n      return lc.includes(filter);\n    });\n\n    console.log(newList);\n    this.setState({ foods: newList });\n  };\n\n  updateForm(e) {\n    const { name, value } = e.target;\n    console.log(value);\n    console.log(name);\n    // this.searchClothes(value);\n    // this.setState({\n    //     [name]: value\n    // });\n  }\n  render() {\n    // const { }\n    return (\n      <div>\n        {/* <Card border=\"light\" style={{ width: \"14rem\", height: \"8rem\"}}>\n          <Card.Header>TEMPERATURA</Card.Header>\n          <Card.Body>\n            <Card.Img src={`https://openweathermap.org/img/w/${this.state.icon}.png`}></Card.Img>\n            <Card.Title>{this.state.temp}ºC</Card.Title>\n            <Card.Title>{this.state.city}</Card.Title>\n            <Card.Title>{this.state.country}</Card.Title>\n            <Card.Text>{this.state.windSpeed}km/h</Card.Text>\n            <Card.Text>{this.state.humidity}%</Card.Text>\n          </Card.Body>\n        </Card> */}\n        <div>\n          <Navbar bg=\"light\" variant=\"light\">\n            <Navbar.Brand href=\"/home\">Quemepongo</Navbar.Brand>\n            <Form inline>\n              <FormControl\n                onChange={this.updateForm}\n                type=\"text\"\n                placeholder=\"Search\"\n                className=\"mr-sm-2\"\n                value={this.state.value}\n              />\n              <Button variant=\"outline-primary\" onclick={this.searchClothes}>\n                Buscar\n              </Button>\n              <div className=\"Linkformulario\">\n                <Link to=\"/FormClothe\">Añadir nueva ropa</Link>\n              </div>\n            </Form>\n          </Navbar>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport AuthService from \"../auth/AuthService\";\nimport { Link } from \"react-router-dom\";\nimport \"./landing.css\";\n\nclass Landing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n  handleLogout = e => {\n    this.props.logout();\n  };\n  render() {\n    return (\n      <div className=\"landing\">\n\n        <div className=\"div-text\">\n          <h2>\n            ¿Cansado de tener que elegir tu ropa cada vez que sales a la calle?<br></br><br/>\n            ¿Cansado de tener que abrir la ventana para saber que tiempo hace y\n            que ponerte?<br></br><br/>\n            ¡Aquí tenemos tu solución!<br></br><br/>\n            ¡Clasifica tu ropa según la climatología y accede a ella de formna sencilla!\n            Ademas te muestra la información meteorológica para que selecciones tu vestimenta de la manera más óptima.\n            ¡Pruébalo ya!\n\n          </h2>     \n        </div>\n        <div className=\"land-photo\">\n          <img src=\"https://mejorconsalud.com/wp-content/uploads/2019/03/consejos-para-no-acumular-ropa-en-el-armario-500x333.jpg\" alt=\"Armario\"></img>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Landing;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Contents from \"./components/contents/Contents\";\nimport FormClothe from \"./components/newclothe/newclothe\";\nimport Temperature from \"./components/termperature/temperature\";\nimport Landing from \"./components/landing/landing\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  updateForm(e, field) {\n    this.setState({\n      ...this.state,\n      [field]: e.target.value\n    });\n  }\n\n  addFood = thecloth => {\n    const Clothescopie = [...this.state.clothes];\n    Clothescopie.push(thecloth);\n    this.setState({ clothes: Clothescopie });\n  };\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      //en este caso mostramos los contenidos ya que hay usuario\n      return (\n        <React.Fragment>\n          <Redirect to=\"/Contents\" />\n\n          <div className=\"home\">\n            <header className=\"App-header\">\n              <Navbar\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n            </header>\n            <main>\n              \n              <Switch>\n                <Route\n                  exact\n                  path=\"/Contents\"\n                  component={Contents}\n                  render={() => (\n                    <Contents\n                      userInSession={this.state.loggedInUser}\n                      logout={this.logout}\n                    />\n                  )}\n                />\n\n                <Route\n                  exact\n                  path=\"/FormClothe\"\n                  component={FormClothe}\n                  render={() => <FormClothe />}\n                />\n              </Switch>\n            </main>\n          </div>\n        </React.Fragment>\n        //ola\n      );\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <Redirect to=\"/Landing\" />\n\n          <div className=\"App\">\n            <header className=\"App-header1\">\n              <div className=\"login\">\n                <Navbar\n                  userInSession={this.state.loggedInUser}\n                  logout={this.logout}\n                />\n\n                <Switch>\n                <Route\n                  exact\n                  path=\"/Landing\"\n                  component={Landing}\n                  render={() => <Landing/>}\n                    />\n\n                  <Route\n                    exact\n                    path=\"/signup\"\n                    render={() => <Signup getUser={this.getUser} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/login\"\n                    render={() => (\n                      <Login getUser={user => this.getUser(user)} />\n                    )}\n                  />\n                </Switch>\n              </div>\n              {/* <div className=\"TempDiv\">\n                <h4>\n                  <Temperature></Temperature>\n                </h4>\n              </div> */}\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n<Router>\n<App />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}